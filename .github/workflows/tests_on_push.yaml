name: homework_bot CI/CD
on:
  push:
    branches:
      - master
jobs:
  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt
      - name: Test with flake8 and pytest
        run: |
          python -m flake8 .
          pytest
    name: Test changed-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed file
        id: changed-files-specific
        uses: tj-actions/changed-files@v34
        with:
          files: |
            - homework.py
            - exceptions.py 
  build_and_pub:
    needs: run_tests
    runs-on: ubuntu-latest
    if: steps.changed-files-specific.outputs.only_changed == 'true'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/homework-bot:latest
  deploy:
    name: Deploy project on remote host
    runs-on: ubuntu-latest
    needs: build_and_pub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_HOST_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          touch .env
          echo PRACTICUM_TOKEN=${{ secrets.PRACTICUM_TOKEN }} >> .env
          echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
          echo TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }} >> .env
          sudo docker stop yandex_homework_bot
          sudo docker rm yandex_homework_bot
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/homework-bot
          sudo docker run --env-file .env -d --name yandex_homework_bot ${{ secrets.DOCKER_USERNAME }}/homework-bot
          rm .env
  send_message:
    name: Send message to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} complete!